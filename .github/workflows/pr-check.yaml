#
# Copyright (C) 2023-2024 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: pr-check

on: [pull_request]

jobs:
  build:
    name: Build / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: "windows-2022"
          - os: "macos-14"
          - os: "ubuntu-22.04"
    timeout-minutes: 20
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Execute pnpm
        run: pnpm install --frozen-lockfile

      - name: Run typecheck
        run: pnpm typecheck

        # skip formatter on windows
      - name: Run formatter
        if: ${{ matrix.os=='ubuntu-22.04' || matrix.os=='macos-14' }}
        run: pnpm format:check

      - name: Run linter
        run: pnpm lint:check

      - name: Run tests
        run: pnpm test

      - name: Run build
        run: pnpm build
        timeout-minutes: 40

  e2e-tests:
    name: e2e tests
    runs-on: ubuntu-24.04
    env:
      SKIP_EXTENSION_INSTALL: true
    steps:
      - uses: actions/checkout@v4
        with:
          path: extension-minikube

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # Checkout podman desktop
      - uses: actions/checkout@v4
        with:
          repository: containers/podman-desktop
          ref: main
          path: podman-desktop

      - name: Revert unprivileged user namespace restrictions in Ubuntu 24.04
        run: |
          # allow unprivileged user namespace
          sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false
          package_json_file: ./podman-desktop/package.json

      - name: Execute pnpm
        working-directory: ./podman-desktop
        run: pnpm install

      - name: Build Podman Desktop for E2E tests
        working-directory: ./podman-desktop
        run: pnpm test:e2e:build

      - name: Ensure getting current HEAD version of the test framework
        working-directory: ./extension-minikube
        run: |
          # workaround for https://github.com/containers/podman-desktop-extension-bootc/issues/712
          version=$(npm view @podman-desktop/tests-playwright@next version)
          echo "Version of @podman-desktop/tests-playwright to be used: $version"
          jq --arg version "$version" '.devDependencies."@podman-desktop/tests-playwright" = $version' package.json > package.json_tmp && mv package.json_tmp package.json
          pnpm install --lockfile-only
  
      - name: Execute pnpm in Minikube Extension
        working-directory: ./extension-minikube
        run: pnpm install

      - name: Build minikube extension from container file
        working-directory: ./extension-minikube
        run: |
          pnpm build
          podman build -t local_minikube_image ./
          CONTAINER_ID=$(podman create localhost/local_minikube_image --entrypoint "")
          podman export $CONTAINER_ID > /tmp/local_minikube_extension.tar
          mkdir -p tests/playwright/tests/output/minikube-tests-pd/plugins
          tar -xf /tmp/local_minikube_extension.tar -C tests/playwright/tests/output/minikube-tests-pd/plugins

      - name: Run All E2E tests
        working-directory: ./extension-minikube
        env:
          PODMAN_DESKTOP_ARGS: ${{ github.workspace }}/podman-desktop
        run: pnpm test:e2e

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: always() # always run even if the previous step fails
        with:
          fail_on_failure: true
          include_passed: true
          detailed_summary: true
          annotate_only: true
          require_tests:  true
          report_paths: '**/*results.xml'

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-tests
          path: ./**/tests/**/output/
